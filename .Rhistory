#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1" )
#load ggplot2
library(ggplot2)
##error bar plots
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1", "turf" ="dodgerblue2" )
ggplot.eb.open<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.open
ggplot.eb.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.closed
ggplot.eb.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme(text = element_text(size=14))+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.sham
#############now try same for deployment2#######################
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#drop everything after 72 hours
data<-data[1:671,1:14]
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
##
###below is lots of plotting code
#load library(ddply) compute summary stats for plotting
library(plyr)
data2.summary<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(surviving),
mean=mean(surviving),
sd   = sd(surviving),
se   = sd / sqrt(N) )
data2.summary.closed<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(close),
mean=mean(close),
sd   = sd(close),
se   = sd / sqrt(N) )
data2.summary.sham<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(sham),
mean=mean(sham),
sd   = sd(sham),
se   = sd / sqrt(N) )
#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1" )
#load ggplot2
library(ggplot2)
##error bar plots
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1", "turf" ="dodgerblue2" )
ggplot.eb.open<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.open
ggplot.eb.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.closed
ggplot.eb.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme(text = element_text(size=14))+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.sham
t.test(data2$surviving,data2$closed)
#bring data in
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#drop all observations past 72 hours
data <- data[ which(data$hours_since_deployment < 80), ]
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
t.test(data2$surviving,data2$closed)
summary(result)
#bring data in
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#drop all observations past 72 hours
data <- data[ which(data$hours_since_deployment < 80), ]
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#bring data in
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#drop all observations past 72 hours
data <- data[ which(data$hours_since_deployment < 80), ]
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + closed (1|block:treatment), data=data2)
result
summary(result)
#bring data in
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#drop all observations past 72 hours
data <- data[ which(data$hours_since_deployment < 80), ]
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + closed + (1|block:treatment), data=data2)
result
summary(result)
View(data)
View(data2)
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
#bring data in
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#drop all observations past 72 hours
data <- data[ which(data$hours_since_deployment < 80), ]
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + close + (1|block:treatment), data=data2)
result
summary(result)
t.test(data2$surviving,data2$closed)
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#drop everything after 72 hours
data<-data[1:671,1:14]
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
t.test(data2$surviving,data2$closed)
#bring data in
data<-read.csv(file="deployment2_2016_smooth_csv.csv", header=TRUE)
#drop turf and post 72 hour obs
data <- data[ which(data$hours_since_deployment < 73 & data$treatment != 'turf'), ]
#make block into a factor
data$block <- as.factor(data$block)
ibrary(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(surviving~ hours_since_deployment * treatment + (1|block:treatment) + closed, data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
t.test(data2$surviving,data2$closed)
##
###below is lots of plotting code
View(data)
View(data)
data<-read.csv(file="deployment2_2016_smooth_csv.csv", header=TRUE)
#drop turf and post 72 hour obs
data <- data[ which(data$hours_since_deployment < 73 & data$treatment != 'turf'), ]
#make block into a factor
data$block <- as.factor(data$block)
##not using this code bit for 2016, because i did it in excel when smoothing: data$total<-rowSums(data[7:13])
data$surviving<-data$total_all_stages/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(surviving~ hours_since_deployment * treatment + (1|block:treatment) + closed, data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
t.test(data2$surviving,data2$closed)
##
###below is lots of plotting code
#load library(ddply) compute summary stats for plotting
library(plyr)
data2.summary<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(surviving),
mean=mean(surviving),
sd   = sd(surviving),
se   = sd / sqrt(N) )
data2.summary.closed<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(closed),
mean=mean(closed),
sd   = sd(closed),
se   = sd / sqrt(N) )
data2.summary.sham<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(sham),
mean=mean(sham),
sd   = sd(sham),
se   = sd / sqrt(N) )
#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "lightreen", "soy" = "mediumpurple", "bare" = "firebrick1", "turf" ="dodgerblue2" )
#load ggplot2
library(ggplot2)
##error bar plots
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1", "turf" ="dodgerblue2" )
ggplot.eb.open<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))
xlab("")+
ylab("")
ggplot.eb.open
ggplot.eb.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.closed
ggplot.eb.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme(text = element_text(size=14))+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.sham
#bring data in
data<-read.csv(file="deployment2_2016_smooth_csv.csv", header=TRUE)
#drop turf and post 72 hour obs
data <- data[ which(data$hours_since_deployment < 73 & data$treatment != 'turf'), ]
#make block into a factor
data$block <- as.factor(data$block)
##not using this code bit for 2016, because i did it in excel when smoothing: data$total<-rowSums(data[7:13])
####data$surviving<-data$total_all_stages/data$Initial_count
View(data)
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
View(data1)
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
#bring data in
data<-read.csv(file="deployment2_2016_smooth_csv.csv", header=TRUE)
#drop turf and post 72 hour obs
data <- data[ which(data$hours_since_deployment < 73 & data$treatment != 'turf'), ]
#make block into a factor
data$block <- as.factor(data$block)
##not using this code bit for 2016, because i did it in excel when smoothing: data$total<-rowSums(data[7:13])
####data$surviving<-data$total_all_stages/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(surviving~ hours_since_deployment * treatment + (1|block:treatment) + closed, data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
t.test(data2$surviving,data2$closed)
#load library(ddply) compute summary stats for plotting
library(plyr)
data2.summary<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(surviving),
mean=mean(surviving),
sd   = sd(surviving),
se   = sd / sqrt(N) )
data2.summary.closed<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(closed),
mean=mean(closed),
sd   = sd(closed),
se   = sd / sqrt(N) )
data2.summary.sham<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(sham),
mean=mean(sham),
sd   = sd(sham),
se   = sd / sqrt(N) )
#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "lightreen", "soy" = "mediumpurple", "bare" = "firebrick1", "turf" ="dodgerblue2" )
#load ggplot2
library(ggplot2)
##error bar plots
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1", "turf" ="dodgerblue2" )
ggplot.eb.open<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))
xlab("")+
ylab("")
ggplot.eb.open
ggplot.eb.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme_bw()+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.closed
ggplot.eb.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=3)+
theme(text = element_text(size=14))+
theme_bw()+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))+
scale_y_continuous(expand = c(0, 0), limits = c(0, 1))+
xlab("")+
ylab("")
ggplot.eb.sham
