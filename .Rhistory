ggplot(data2.summary, aes(x=treatment, y=mean, colour=treatment, fill=treatment)) +
geom_bar(position=position_dodge(), stat="identity") +
scale_color_manual(values=cols)+
scale_fill_manual(values=cols)+
ylab("surviving")+
ggtitle("Monarch Survival by Treatment") +
theme(panel.background = element_blank(), axis.text.x = element_blank(),  axis.ticks = element_blank())+
facet_grid(~hours_since_deployment)
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
##
###below is lots of plotting code
#load library(ddply) compute summary stats for plotting
library(plyr)
data2.summary<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(surviving),
mean=mean(surviving),
sd   = sd(surviving),
se   = sd / sqrt(N) )
data2.summary.closed<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(closed),
mean=mean(closed),
sd   = sd(closed),
se   = sd / sqrt(N) )
data2.summary.sham<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(sham),
mean=mean(sham),
sd   = sd(sham),
se   = sd / sqrt(N) )
#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1" )
#load ggplot2
library(ggplot2)
#make the pot
ggplot1<- ggplot(data2.summary,
aes(x=data2.summary$hours_since_deployment, y=mean, colour=treatment, shape=treatment)) +
scale_color_manual(values=cols)+
geom_point()+
geom_line(size=1.5)+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
#view the plot
ggplot1
#cooler ggplot
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "fallow" = "firebrick1", "turf" ="dodgerblue2" )
ggplot2<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot2
#make it for closed and sham
ggplot.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.closed
ggplot.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.sham
#crazy faceted bar plot
ggplot(data2.summary, aes(x=treatment, y=mean, colour=treatment, fill=treatment)) +
geom_bar(position=position_dodge(), stat="identity") +
scale_color_manual(values=cols)+
scale_fill_manual(values=cols)+
ylab("surviving")+
ggtitle("Monarch Survival by Treatment") +
theme(panel.background = element_blank(), axis.text.x = element_blank(),  axis.ticks = element_blank())+
facet_grid(~hours_since_deployment)
View(data1)
View(data)
View(open.only)
View(open.only)
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
View(data)
data[7:14]
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
dims(data)
dim(data)
head(data)
data([1])
data[7]
data[8]
data[14]
dim(data[14])
dim(data[1])
dim(data[2])
dim(data[3])
dim(data[4])
is.numeric(data[14])
as.numeric(data[14])
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
is.numeric(data[14])
is.numeric(data[12])
head(data)
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
data$block <- as.factor(data$block)
View(data)
data$total<-rowSums(data[7:13])
data$total<-rowSums(data[8:14])
data[7]
dim(data[7])
data$total<-rowSums(data[7:14])
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
##
###below is lots of plotting code
#load library(ddply) compute summary stats for plotting
library(plyr)
data2.summary<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(surviving),
mean=mean(surviving),
sd   = sd(surviving),
se   = sd / sqrt(N) )
data2.summary.closed<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(closed),
mean=mean(closed),
sd   = sd(closed),
se   = sd / sqrt(N) )
data2.summary.sham<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(sham),
mean=mean(sham),
sd   = sd(sham),
se   = sd / sqrt(N) )
#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1" )
#load ggplot2
library(ggplot2)
#make the pot
ggplot1<- ggplot(data2.summary,
aes(x=data2.summary$hours_since_deployment, y=mean, colour=treatment, shape=treatment)) +
scale_color_manual(values=cols)+
geom_point()+
geom_line(size=1.5)+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
#view the plot
ggplot1
#cooler ggplot
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "fallow" = "firebrick1", "turf" ="dodgerblue2" )
ggplot2<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot2
#make it for closed and sham
ggplot.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.closed
ggplot.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.sham
#crazy faceted bar plot
ggplot(data2.summary, aes(x=treatment, y=mean, colour=treatment, fill=treatment)) +
geom_bar(position=position_dodge(), stat="identity") +
scale_color_manual(values=cols)+
scale_fill_manual(values=cols)+
ylab("surviving")+
ggtitle("Monarch Survival by Treatment") +
theme(panel.background = element_blank(), axis.text.x = element_blank(),  axis.ticks = element_blank())+
facet_grid(~hours_since_deployment)
#############now try same for deployment2#######################
#bring data in
data<-read.csv(file="deployment2_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
##
###below is lots of plotting code
#load library(ddply) compute summary stats for plotting
library(plyr)
data2.summary<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(surviving),
mean=mean(surviving),
sd   = sd(surviving),
se   = sd / sqrt(N) )
data2.summary.closed<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(closed),
mean=mean(closed),
sd   = sd(closed),
se   = sd / sqrt(N) )
data2.summary.sham<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(sham),
mean=mean(sham),
sd   = sd(sham),
se   = sd / sqrt(N) )
#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1" )
#load ggplot2
library(ggplot2)
#make the pot
ggplot1<- ggplot(data2.summary,
aes(x=data2.summary$hours_since_deployment, y=mean, colour=treatment, shape=treatment)) +
scale_color_manual(values=cols)+
geom_point()+
geom_line(size=1.5)+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
#view the plot
ggplot1
#cooler ggplot
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "fallow" = "firebrick1", "turf" ="dodgerblue2" )
ggplot2<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot2
#make it for closed and sham
ggplot.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.closed
ggplot.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.sham
#crazy faceted bar plot
ggplot(data2.summary, aes(x=treatment, y=mean, colour=treatment, fill=treatment)) +
geom_bar(position=position_dodge(), stat="identity") +
scale_color_manual(values=cols)+
scale_fill_manual(values=cols)+
ylab("surviving")+
ggtitle("Monarch Survival by Treatment") +
theme(panel.background = element_blank(), axis.text.x = element_blank(),  axis.ticks = element_blank())+
facet_grid(~hours_since_deployment)
#bring data in
data<-read.csv(file="deployment1_2017_smooth_csv.csv", header=TRUE)
data<-na.omit(data)
#make block into a factor
data$block <- as.factor(data$block)
data$total<-rowSums(data[7:14])
data$surviving<-data$total/data$Initial_count
library(reshape2)
data1<-dcast(data, date+hours_since_deployment+block+treatment~exclosure_treatment, mean)
data1$open<-NULL
open.only<-data[which(data$exclosure_treatment=="open"),]
open.only$exclosure_treatment<-NULL
data2<-merge(open.only, data1)
#ok, let's do this as a linear mixed effects model. We have to also call some other packages if we want p values
library(lmerTest)
#do the anova using lmer function
result <- lmer(total~ hours_since_deployment * treatment + (1|block:treatment), data=data2)
result
summary(result)
#and an anova
anova(result)
#analysis of random and fixed parts and post hoc
#analysis of time and Treatment effects
step(result)
##
###below is lots of plotting code
#load library(ddply) compute summary stats for plotting
library(plyr)
data2.summary<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(surviving),
mean=mean(surviving),
sd   = sd(surviving),
se   = sd / sqrt(N) )
data2.summary.closed<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(closed),
mean=mean(closed),
sd   = sd(closed),
se   = sd / sqrt(N) )
data2.summary.sham<-ddply(data2, .(hours_since_deployment, treatment), summarize,
N=length(sham),
mean=mean(sham),
sd   = sd(sham),
se   = sd / sqrt(N) )
#creating the plot!
#make my colour palette
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "bare" = "firebrick1" )
#load ggplot2
library(ggplot2)
#make the pot
ggplot1<- ggplot(data2.summary,
aes(x=data2.summary$hours_since_deployment, y=mean, colour=treatment, shape=treatment)) +
scale_color_manual(values=cols)+
geom_point()+
geom_line(size=1.5)+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), colour="black", width=.2, position="dodge")+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
#view the plot
ggplot1
#cooler ggplot
cols <- c("corn" = "gold2", "prairie" = "limegreen", "soy" = "mediumpurple", "fallow" = "firebrick1", "turf" ="dodgerblue2" )
ggplot2<- ggplot(data2.summary,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot2
#make it for closed and sham
ggplot.closed<- ggplot(data2.summary.closed,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.closed
ggplot.sham<- ggplot(data2.summary.sham,
aes(x=hours_since_deployment, y=mean, shape=treatment, colour=treatment, fill=treatment))+
geom_point()+
geom_ribbon(aes(ymin=mean-se, ymax=mean+se, alpha=1/2))+
scale_colour_manual(values=cols)+
scale_fill_manual(values=cols)+
geom_line(size=1.5)+
xlab("Hours Since Deployment")+
ylab("Surviving")+
theme(text = element_text(size=14))+
scale_x_continuous(expand = c(0, 0), limits = c(0, 75), breaks=c(0, 10, 20, 30, 40, 50, 60, 70))
ggplot.sham
#crazy faceted bar plot
ggplot(data2.summary, aes(x=treatment, y=mean, colour=treatment, fill=treatment)) +
geom_bar(position=position_dodge(), stat="identity") +
scale_color_manual(values=cols)+
scale_fill_manual(values=cols)+
ylab("surviving")+
ggtitle("Monarch Survival by Treatment") +
theme(panel.background = element_blank(), axis.text.x = element_blank(),  axis.ticks = element_blank())+
facet_grid(~hours_since_deployment)
